//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.12

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "sources")]
#[serde(rename_all = "camelCase")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false, column_type = "Text", nullable)]
    pub id: String,
    #[sea_orm(column_type = "Text")]
    pub source_type: String,
    #[sea_orm(column_type = "Text", nullable)]
    pub display_name: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub added_at: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub updated_at: Option<String>,
    pub is_visible: Option<i32>,
    pub child_order: Option<i32>,
    pub sync_server: Option<i32>,
    #[sea_orm(column_type = "Text", nullable)]
    pub last_sync: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub data: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
